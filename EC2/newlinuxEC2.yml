AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create a Linux EC2 instance with Elastic IP

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: "The ID of an existing VPC."

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: "The ID of an existing subnet in your VPC where the EC2 instance will be launched."

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Mappings:
  AWSRegionToAMI:
    us-east-1:
      AMI: "ami-0c55b159cbfafe1f0"  # Example Ubuntu AMI for us-east-1
    us-west-2:
      AMI: "ami-07c5ecd8498c59db5"  # Example Ubuntu AMI for us-west-2
    eu-west-1:
      AMI: "ami-047bb4163c506cd98"  # Example Ubuntu AMI for eu-west-1

Resources:
  MyElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      ImageId: !FindInMap [AWSRegionToAMI, !Ref "AWS::Region", AMI]
      SecurityGroupIds: # here we are going to import the security group from the SampleNetwork tamplate
        - !ImportValue 
            SampleNetworkCrossStack-SecurityGroupID
      SubnetId: # same thing here we import our subnetId 
          !ImportValue 'SampleNetworkCrossStack-SubnetID'
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !ImportValue 'SampleNetworkCrossStack-SubnetID'
          GroupSet: 
          - !ImportValue 
              SampleNetworkCrossStack-SecurityGroupID
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><body><h1>My First WebPage by Fokoue Thomas ${AWS::Region}<h1></body></html>" > /var/www/html/index.html
      Tags: 
        - Key: Name
          Value: ec2-instance-CrossStack
  MyEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt MyElasticIP.AllocationId
      InstanceId: !Ref MyEC2Instance


Outputs:
  InstanceId: 
    Description: InstanceId of the newly created EC2 instance
    Value: !GetAtt Myec2instance.PublicIp 

  PrivateDnsName:
    Description: Display the DNS name of the EC2 instance
    Value: !GetAtt Myec2instance.PrivateDnsName
    Export:
     Name: !Sub '${AWS::StackName}-Myec2instance1'

  PublicDnsName:
    Description: Display the public DNS Name of the ec2 intance
    Value: !GetAtt Myec2instance.PublicDnsName
    Export:
     Name: !Sub '${AWS::StackName}-Myec2instance2'
